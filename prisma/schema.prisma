// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  Account   Account[]

  @@map("users")
}

model Account {
  id        Int      @id @default(autoincrement())
  owner     String   @unique
  balance   Decimal  @db.Decimal(12, 2) // can store up to 999,999,999,999.99
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user        User          @relation(fields: [owner], references: [username], onDelete: Cascade)
  Transaction Transaction[]

  @@map("accounts")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  invoice     String
  account_id  Int
  amount      Decimal  @db.Decimal(12, 2)
  type        Type
  description String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

  account Account @relation(fields: [account_id], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Product {
  id          Int      @id @default(autoincrement())
  kode        String   @unique
  name        String
  price       Decimal  @db.Decimal(12, 2)
  weight      Float?
  description String?
  createdAt   DateTime @default(now())
  udpateAt    DateTime @updatedAt

  @@map("products")
}

enum Type {
  TOPUP
  PAYMENT
}
